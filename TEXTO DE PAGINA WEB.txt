Uso de la Consola GIT
El repositorio fisico que tenemos en GIT (local) es donde crearemos los archivos, realizaremos las modificaciones, y añadiremos nuevos archivos o commitearemos las modificacioes oportunas.

Comandos para la consola de GIT
$git bash= para abrir consola en la carpeta del repositorio local
$git clone= para clonarb el repositorio origins, el que se encuentra en el servidor
$git add= para añadir un nuevo archivo
$git pull= tarer un archuvo al repositorio mlocal desde el repositorio del servidor
$git commit -a= commitear todas las modificaciones
$git commit 'file'= para comitar solo un archivo especifico
$git push= para subir el archivo del repositorio local al repositorio de la nube
$git status= para coner el estado del repositorio local
$git fetch= para preguntar por la existencia de cambios en remoto
Pasos a seguir en la consola de GIT
Primer paso: Clonar el repositorio remoto en una carpeta local. Primero crearemos una carpeta llamada git en el disco c:. A continuacion abriremos el menu secundario dentro de dicha carpeta, seleccionaremos el 'GIT Bash Here', que nos abrira la consola de GIT en esa carpeta. En la consola de GIT solicitaremos que nos clone el repositorio, a traves del comando '$git clone' añadiendo la URL que nos proporciona el repositorio remoto. Una vez clonado el repositorio deberemos abrir la carpeta creada con el repositorio, y volver a accionar el menu secundario, seleccionando de nuevo 'GIT Bash Here'. Y ya tendremos la consola preparada para poder trabajar en GIT

Segundo paso: Crearemos un archivo html en dicha carpeta, por ejemplo: 'file.html'. Para poder añadirlo al repositorio local, abrimeros la consola GIt y primero comprobaremos el estado de nuestro repositorio con el comando '$git status'. Que nos dira que en la rama maestro de nuestro repositorio hay un archivo nuevo. y nos dara opciones de como añadirlo. lo haremos a traves del comando '$git add'. En caso de existir más de un archivo nuevo podremos usar el comando '$git add --all' que nos añadira todo los archivos existentes.

Tercer paso: Una vez tengamos los archivos añadicos al repositorionlocal deberemos comprometerlos, o preparlos, para ser añadidos al repositorio del servidor. Para ellos en la consola GIT usaremos el comando '$git commit -a' que nos preparara todos los archivos para ser subidos. Se nos abrira el IDE que estemos usando con GIT, en nuestro caso el Visual Studio Code, donde deberemos añadir el mensaje o comentario que deseamos que se añada con el nuevo cambio. Guardaremos el archivo del Visual Studio Code, y cerraremos el IDE. A continuacion la consola de GIT nos notificará que ha habido una modificacion y cambio, asi como el mensaje que hayamos añadido.

Cuarto paso: Para poder subir el archivo de nuestro repositorio local al repositorio del servidor deberemos usar el comando '$git push' en la consola, tras unso segundos nos notificará que ha sido una subida exitosa. Para poder comprobarlo deberemos abrir nuetsra cuenta GITHUB y en nuestro repositorio actualizar. Alli nos aparecera el archivo o archivos que hayamos subido. En la pestaña de HISTORIAL, nos aparecera las acciones que habremos realizado, asi como los comentarios del mismo.

Quinto paso: Si hemos realizado, nosotros a alguien que colabore en nuetsro proyecto,y queremos tener las actualizaciones de código. Tendremos que abrir nuetsra consola GIT en nuestra carpeta de repositorio local y usar el comando '$git pull' para "traernos" las modificaciones. Si no sabemos si existen o no modificaciones, se lo podremos preguntar a la consola GIT con el comando '$git fetch', que nos comunicará si existen los cambios o no.

RETORNO A INDICE

DEFINICION DE HTML.
w3c
        HTML, siglas en inglés de HyperText Markup Language (‘lenguaje de marcas de hipertexto’), hace referencia al lenguaje de marcado para la elaboración de páginas web. 
        Es un estándar que sirve de referencia del software que conecta con la elaboración de páginas web en sus diferentes versiones, define una estructura básica y un código (denominado código HTML) para la definición de contenido de una página web, como texto, imágenes, videos, juegos, entre otros. 
        Es un estándar a cargo del World Wide Web Consortium (W3C) o Consorcio WWW, organización dedicada a la estandarización de casi todas las tecnologías ligadas a la web, sobre todo en lo referente a su escritura e interpretación. 
        HTML se considera el lenguaje web más importante siendo su invención crucial en la aparición, desarrollo y expansión de la World Wide Web (WWW). 
        Es el estándar que se ha impuesto en la visualización de páginas web y es el que todos los navegadores actuales han adoptado. El lenguaje HTML basa su filosofía de desarrollo en la diferenciación. Para añadir un elemento externo a la página (imagen, vídeo, script, entre otros.), este no se incrusta directamente en el código de la página, sino que se hace una referencia a la ubicación de dicho elemento mediante texto. De este modo, la página web contiene solamente texto mientras que recae en el navegador web (interpretador del código) la tarea de unir todos los elementos y visualizar la página final. Al ser un estándar, HTML busca ser un lenguaje que permita que cualquier página web escrita en una determinada versión, pueda ser interpretada de la misma forma (estándar) por cualquier navegador web actualizado. Sin embargo, a lo largo de sus diferentes versiones, se han incorporado y suprimido diversas características, con el fin de hacerlo más eficiente y facilitar el desarrollo de páginas web compatibles con distintos navegadores y plataformas (PC de escritorio, portátiles, teléfonos inteligentes, tabletas, etc.) No obstante, para interpretar correctamente una nueva versión de HTML, los desarrolladores de navegadores web deben incorporar estos cambios y el usuario debe ser capaz de usar la nueva versión del navegador con los cambios incorporados. Normalmente los cambios son aplicados mediante parches de actualización automática (Firefox, Chrome) u ofreciendo una nueva versión del navegador con todos los cambios incorporados, en un sitio web de descarga oficial (Internet Explorer). Por lo que un navegador desactualizado no será capaz de interpretar correctamente una página web escrita en una versión de HTML superior a la que pueda interpretar, lo que obliga muchas veces a los desarrolladores a aplicar técnicas y cambios que permitan corregir problemas de visualización e incluso de interpretación de código HTML. Así mismo, las páginas escritas en una versión anterior de HTML deberían ser actualizadas o reescritas, lo que no siempre se cumple. Es por ello que ciertos navegadores todavía mantienen la capacidad de interpretar páginas web de versiones HTML anteriores. Por estas razones, todavía existen diferencias entre distintos navegadores y versiones al interpretar una misma página web.
        
COMO SE CREA UN DOCUMENTO
Para crear un documento HTML primero debemos definir el doctype del documento, crear el documento y su cabecera y cuerpo. siempre cerrar las etiquetas definidas.

Ejemplo:
            < !doctype html >
            < html >
            < head >
                < title> Index < /title>
                < meta charset="utf-8">
                < meta name="Author" content="Sandra">
                < link type="text/css" rel="stylesheet" href="estilo.css">
            < /head >
            < body >
                < p > ... </ p >
            < /body >
            < /html >
        
RETORNO A INDICE

SINTAXIS DE HTML.
w3c
Como ya hemos visto en la página anterior el HTML es y un lenguaje de marcado. su sintaxis esta basada en el uso de marcas, o etiquetas que son los elementos basicos del lenguaje. Dentro de estos elementos no encontramos con los atributos que nos aportan una mayor especificidad al comportamiento de los elementos pudiendo parametrizarlos.

*Los elementos:Son los que dan configuracion, dan forma a la pagina HTML (etiquetas). Las etiquetas han de ser definidas por un por un signo mayor que (>)a su inicio y un signo menor que (>) al final,poniendo entre ambos signos matematicos el nombre que le daremos a la etiqueta. por ejemplo: <etiqueta> Dentro de los tipos de etiqueta podemos encontrarnos con etiquetas de apertura y cierre, o etiquetas de elementos unicos. Las etiquetras mas habituales que nos encontraremos serán las de apertuta y cierre, las que tienen una etiqeta de inicio < etiqueta > y una etiqueta de fin </ etiqueta >, que permiten tener a otras etiquetas u otro contenido anidado (directamente texto).La estructura : <etiqueta > contenido | subelementos < etiqueta >. En las etiquetas de cierre nos encontramos con la barra invertida para diferenciarlo de las etiquetas de apertura.
* Los atributos en HTML: Las etiquetas puede ser parametrizadas a traves de los atributos. Se estructuriza con el nombre o valor y se deberean poner antes del cierre de la etiqueta. El valor debera ir tras un signo = y comillas simples o dobles '', ""
Por ejemplo: < etiqueta atributo= "valor" >
* Entidades en HTML(simbolos de escape): Es una de as estructuras que nos encontraremos dentro de una pagina de HTML, estas empiezan su sintaxis por un andpersand &, a cntinuacion el codigo de entidad (generalmento alfanumerico) para acabar con un punto y coma ;. Su funcionalidad es la de mostrar caracteres especiales como pueden ser los simbolos < y > , la comilla simple o el simbolo del € o $. Como por ejemplo: € que su sintaxios es: & euro ; (sin espacios).
* Comentarios en HTML: uno de las herramientas mas importantes que deberemos saber utilizar en cualquier lenguaje, ya sea de programacion o de marcas, es el poder comentar todo lo que se va realizando sin que llegue a ejecutarse. Consta de una estructura sencilla y altamente eficaz, y ademas puede ternes varias lineas de texto. <! -- comentarios, pueden ser de varias lineas explicando las acciones que hemos realizado -- >
Normas de codificacion:
Existen normas de codificacion que son importante para poder dar un formato coherente a las paginas web. Entre ellas nos encontraremos:

No sensible a mayúsculas: este lenguaje no es sneible amyusculas. da lo mismo como escribamos los elementos y atributos en mayusculas y/o minusculas. pero la recoendacion mas comun es que las etiquetas y los atributos sean escritos en minusculas.
Espacios en blanco: al escribir un espacio en blanco en nuestro proyecto, generaremos dicho espacio en la visualizacion.si vbien juntamos varios espacios en blanco, esto solo generara un espacio en blanco. ocurrira lo mismo con las tabulaciones. en caso de que queramos formar unExisten normas de codificacion que son importante para poder dar un formato coherente a las paginas web. Entre ellas nos encontraremos:
No sensible a mayúsculas: este lenguaje no es sneible amyusculas. da lo mismo como escribamos los elementos y atributos en mayusculas y/o minusculas. pero la recoendacion mas comun es que las etiquetas y los atributos sean escritos en minusculas.
Espacios en blanco: al escribir un espacio en blanco en nuestro proyecto, generaremos dicho espacio en la visualizacion.si bien juntamos varios espacios en blanco, esto solo generara un espacio en blanco. ocurrira lo mismo con las tabulaciones. en caso de que queramos formar un conglomerado de espacios en blanco usaremos la entidad:
&nbsp;

Saltos de línea:Por lo general un salto de linea introdicida en las lineas de codigo no generan nada. Si queremos inserta un salto hemos de utilizar: < br>
RETORNO A INDICE

StyleSheet:CSS
Las hojas de estilo son aquellos documentos en los que definimos el estilo que tendra nuestro documento HTML.

Su funcionamiento es:

En documentos html se escriben las etiquetas que queremos que nos defina los elementos.
En el documento CSS escribiremos como queremos que sea el estilo que impere en todo el documento.
Anñadiremos el enlace a ala hoja de estilo que queremos usar.
Entre las ventajas que nos ofece el poder realizar un archivo css es contar con un diseño consistente y facilmente modificable, sin tener que busrcar linea por linea en nuestro codigo HTML.

Sintaxis de las hojas de estilo:
Las hojas de estilo son las paradojas del css, ya que para poder dar estilo o formato a nuestro arcivo o documento html, lo haremos en un documeto llamado "plano, ya que es una hoja sin formato. un ejemplo de ello seria:

h1 { color: black, background-color:white; }
Lo primero que debemos observar a la hora de confromar nuestra Hoja de Estilo, es que esta debe tener una o varias sentencas que nos determinen que formato adquiere nuestro documento Html.

Hay dos tipos de sentencias que nos encontraremos en CSS:

Sentencias de @
Sentencias de reglas
Las sentencias @ empiezan por dicho simbolo tipografico seguido de un identificador y finaliza por un punto y coma. Debemos tener en cuenta que las sentecias @ referidas a @import y @nameespace, han de colocarse al principio de la hoja css. El resto de sentencias @ pueden colocarse en cualquier linea.

Las sentecnias de reglas estan formadas por un selector y un bloque de declaracion que estara entre llaves {}

Las declaraciones seran de una o cvarias propiedas con sus correspondientes valores, separados por ";". Ademas debemos recoradar que cada propiedad se separa de su valor con el simbolo ":".

Si por un casual tuvieramos una propiedad con varios valores diferesntes,o alternativos, estos se separarrias por ",".

h1{ color: black;}
h1	Sentencias
color	propiedad
:	separacion entre la propiedad y su valor
;	separacion entre propiedades
Estilos en cascada
Los formatos depende de las combinaciones de todas las propiedades que atañen al docuemnto. Las Hojas de Estilo en Cascada son aquellas que abarcan un elemento.

Por ejemplo si determinamos que el fondo lo queremos en color azul en el "body" del documento y los parrafos en negro, lo haremos:

body
{ color: white; }
p
{ background-color: lightcoral;}
Para definir varios selectores simultaneos
Podemos definir varios selectores a la ves, escribiendolos y separandolos por una coma.

p, address
{ color: red;}
Para poder definir varias propiedad de una misma sentencias lo haremos

p
{border-top: red 3px solid;
border-bottom: red 3px solid;}
Repetir Selectores
El formato ideal seria no tener que repetir selectores, ya qye se distribuyen la informacion en variuos lugares de la hoja d eestilo, dificultando la lectura e interpretacion de la hoja de estilos. El navegador aplicará la propiedad de la ultima sentecia queencuentre.

Comentarios
Realizaremos comentarios para aclarar los puntos que queden confusos a la hora de leerlo, o en caso de firmar nuestros documentos.

Para poder comentar utilizaremos los simbolos /* ... */

/* Autor: Pascacio de Ravena, Fecha: 22 de Febrero de 2020 */
h1{
background-color:black; /*fondo negro*/
color: white;} /*Texto blanco*/
RETORNO A INDICE

Parrafos
Organizaremos nuestro documento Html, en parrafos y saltos de linea.Primero definiremos los saltos de linea y mas tarde los parrafos.

Saltos de Linea en el texto
Podemos escribir todo el texto continuo sin darle ninguna separacion u orden, pero seria un desastre. Lo que debemso tener en cuenta para poder tener un texto comprensible es saber donde colocarelos un salto de linea.

Para ello utilizaremos la etqueta <br>, como por ejemplo:

Aqui hay una linea


Aqui va la sengunda linea
El codigo apareceria del siguiente modo:

Aqui hay una linea

<br>

<br>

Aqui va la segunda linea

Parrafos
Para poder organizar un texto que consta basicamente de lineas, no solo haremos uso del <br>. Podemos contar con otro elemento como es el <p> que nos definira los parrafos del texto. Este elemntos ha de tener uan etiqueta de inicio y de cierre.

El codigo que presentaremos para el parrafo ser:

<p>
Citar una fuente
Para reseñar una cita utilizaremos el elemento <blockquote> o el elemento <q>.

La sintaxis de blockquote es:

<blockquote> "Aqui podremos la cita a la que queremos hacer referencia incluyendo su autor.</blockquote>

Por otro lado, si queremos que la cita quede incrustada dentro d ela frase deberemos usar el elemento q

"Aqui esta la frase que da cobijo a la <q>"cita en cuestion"</q>, y asi finalizar la linea de texto.

RETORNO A INDICE

COLORES
Los colores en un docuemto HTML, los trataremos a traves del standard RGB. El cual se basa en la combinacion de los tres colores basicos, rojo, verde y azulpara dar lugar a cualquier otro color.

El estandar RGB tiene un sistema de valores hexadecimales que abarcan desde el 00 hasta el FF. Para verificar dicho valor predeceremos el sistema hexadecimal de dicho color con una almohadilla (#).

Los colores basicos de RGB en sistema hexadecimal seran:

Rojo	#FF0000
Verde	#00FF00
Azul	#0000FF
No hemos de olvidarnos de la codificacion de los colores simples como el Blanco (#000000) y el Negro (#FFFFFF).

El resto de colores por podremos consultar en esta pagina web.

RETORNO A INDICE

Listas HTML
Nos permiten crear agrupaciones de elementos conformando una lista dentro de nuestra pagina. Seria conveniente que fueranprecedidos de po un guion o de un número.

Los tipos de lista que podemos encontrarnos son:

ordenadas
desordenadas
de definiciones
Listas ordenadas:
Son las que nos muestran los elementos de las listan en un orden. Recomendacion es hacer la lsita alfanumerica.

Estas listas van determinadas por: <ol> ... </ ol>
cada uo de los elementos que nos encontraremos dentro de esta lista iran precedidos por las etiquetas: <li> ... <li>

Un ejemplo de ello puede ser:

<ol start="1">
<Evaristo>
<Marcos>
<Maria>
<Athenea>
</ol>
Quedando:

Evaristo
Marcos
Maria
Athenea
El atributo start nos inicializa la lista numerica por el numero que le determinemos como valor del atributo.

De la misma manera podemos inicilizar la lista determinando el tipo de lista que deseamos con el atributo type.

Para que nuestras listas aparezcan ordenada en letras Mayuscula usando type=A, ordenadas en letras minusculas usando Type=a, para listas decimales type=1, para listas ordenadas con numero romanos en minusculas type=i, y en numros romanos en mayusculas type=I

Ordenada en minusculas

Evaristo
Marcos
Maria
Athenea
Ordenada en mayusculas

Evaristo
Marcos
Maria
Athenea
Ordenada en numeros romanos en minusculas

Evaristo
Marcos
Maria
Athenea
Ordenada en numero romanos en mayusculas

Evaristo
Marcos
Maria
Athenea
Tambien podemos hacer que la ordenación este inversa usando el atributo reserved.

Obteniendo:

Evaristo
Marcos
Maria
Athenea
Listas Desordenadas
Estas listas nos sirven para mostrar elementos sin ningun tipo de orden, generalmente prevenidos por una viñeta que puede ser un punto, o cuadrado, o asteriscos...

Para ellos usaremos las etiquetas <ul> ... </ul>. Para los elementosque tendremos dentro de las listas desordenadas, <li> ... <li>

blanco
azul
morado
amarillo
Listas de Definiciones
Estas listas nos sirven para estructurar listas en las que tenemos el valor y la definion. Son listaspara definir terminos, a modo de diccionario. Para ello usaremos la etiqueta <dl> ... <dl>. Son listas de elementos anidados para determinar que tipo de datos trataremos usaremos dt para determinar el valor, y dd para las definiciones.

<dl>
<dt> Termino 1</dt>
<dd>Definición 2</dd>
<dt>Termino 2</dt>
<dd>Definicion 2</dd>
</dl>
Obteniendo asi:

Celofan:
Polímero natural derivado de la celulosa. Tiene el aspecto de un film (como el que se usa para envolver bocadillos) fino, transparente, flexible y resistente a esfuerzos de tracción.
Gadriel:
Literalmente "muro de Dios ", figura como uno de los jefes de los Vigilantes Caídos. Esto se representa en la segunda sección del " Libro de Enoc ", "Parábolas". Se dice que fue responsable de engañar a Eva .
Listas Anidadas
Es el siguiente nivel del manejo de las listas. Se pueden hacer listas anidadas, solamente tendremos que hacer una lista dentro de otra. hay que tener cuidado a la hora de anidar las lsitas, para que no se gener codif¡go fraudulento. Pueden ser cualquier tipo de lista y sin limite de anidacion.

Un ejemplo de ello es:

<ul>
<li>Carnivoro
<ul>
<li>León</li>
<li>Buitre</li>
<li>Hiena</li>
</ul>
</li>
<li>Herbivoro
<ul>
<li>Cabra</li>
<li>Vaca</li>
<li>Conejo</li>
</ul>
</li>
<li>Omnivoro
<ul>
<li>Oso</li>
<li>Urraca</li>
<li>Hombre</li>
</ul>
</li>
</ul>
Carnívoro
León
Buitre
Hiena
Herbívoro
Cabra
Vaca
Omnívoro
Oso
Urraca
RETORNO A INDICE

Enlaces
Es el elemento mas importante de los documentos HTML, ya que mediante ellos podemos entrelazar una pagina con otra. Y conformar la red en si de Internet.

Para crear los enlaces usaremos el elemento <a href="">.

<a href="url">el enlace</a>

Enlace al Inicio

RETORNO A INDICE

Imagenes en HTML
Para no tener una pagina web simple y sencilla agregaremos imagenes que alivien la pesadez del texto monotono. Para ello utilizaremos el elemento img.

Hay que tener en cuenta el peso que las imagenes añadiran a nuestras paginas web, afectando al tiempo de carga de nuestra pagina.

Como insertar una imagen
Para poder poner una imagen en nuestro documento tendremos que usar el elemento img, cuya sintaxis:

< img src="nombreImagen.jpg" alt=""/>
Flores
El elemento img es un elemento simple, con lo cual no tiene etiqueta de cierre

El atributo dde img es src, que nos indicara la ruta completa de la imagen. Lo ideal para no tener una ruta de imagen larga y compleja, colocaremos la imagen en la misma carpeta

Ademas de la ruta, hemos de especificar otrps atributos como width que define la anchura, y height que define la altura.

< img src="foto.jpg" width="100" height="100"/>
Icono
Es recomendable poner n texto alternativo a la imagen paro poder describirla. De ello se encargará el atributo alt.

<img src="nombreImagen.jpg" alt="texto descriptivo" width="100" height="100">
Formatos de imagenes
Los formatos que soportan nuestra paginas web son:

JPEG: Son imagenes digitales comprimidas con perdidas de informacion. son ideales si no queremos que ocupen mucho espacio.
GIF: Formato para imagenes de mapas de 8 bits por pixel. El formato GIF soporta imagenes animadas.
PNG: Sin perdida de informacion, lo que conlleva un mayor peso por imagen.
APNG: Imagenes animadas, evolucion delos gif.
SVG: Graficos vectorials esclables. especificados mediante texto, interpetable por los dispositivos y escalar a traves de diferentes resoluciones.
BMP: Mapas de bits. extension .bmp y .dib
BMP ICO y PNG ICO: Formatos para iconos.
RETORNO A INDICE






